openapi: 3.0.3
info:
  title: API Testing Demo
  version: "1.0.0"
  description: Demo API with JWT auth for testing (functional, security, performance, and contract).
servers:
  - url: http://localhost:3000
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
  /auth/login:
    post:
      summary: Login to get a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Token issued
        '401':
          description: Invalid credentials
  /auth/refresh:
    post:
      summary: Refresh token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token refreshed
        '401':
          description: Invalid or expired token
  /users:
    get:
      summary: List users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
    post:
      summary: Create user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: Created
        '400':
          description: Missing fields
        '409':
          description: Email already exists
  /users/{id}:
    get:
      summary: Get user by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Found
        '404':
          description: Not found
    put:
      summary: Update user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Updated
        '404':
          description: Not found
    delete:
      summary: Delete user (admin only)
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Deleted
        '403':
          description: Forbidden
        '404':
          description: Not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email: { type: string, format: email }
        password: { type: string }
        expOverrideSec: { type: integer }
    UserCreate:
      type: object
      required: [email, name]
      properties:
        email: { type: string, format: email }
        name: { type: string }
        role: { type: string, enum: [user, admin] }
