name: Postman/Newman

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pages: write         # para Pages
  id-token: write      # para Pages
  checks: write        # para publicar el check con JUnit

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  newman:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install server deps (ci if lock, otherwise install)
        working-directory: server
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Start API
        working-directory: server
        run: |
          npm start &
          for i in {1..90}; do
            curl -sf http://localhost:3000/health && break
            echo "Waiting API ($i/90) ..." && sleep 1
          done
          curl -sf http://localhost:3000/health

      - name: Install Newman + reporters
        run: npm i -g newman newman-reporter-htmlextra

      - name: Run Newman (HTML + JUnit + JSON)
        run: |
          newman run "postman/API Testing Demo.postman_collection.json" \
            -r cli,htmlextra,junit,json \
            --reporter-htmlextra-export "postman/newman-report.html" \
            --reporter-junit-export "postman/newman-junit.xml" \
            --reporter-json-export "postman/newman.json" \
            --env-var base_url=http://localhost:3000

      - name: Job Summary (tabla rápida)
        run: |
          echo "## Resumen Newman" >> $GITHUB_STEP_SUMMARY
          jq -r '
            .run as $r |
            "| Métrica | Total | Fallidas |\n|---|---:|---:|\n" +
            "| Requests | \($r.stats.requests.total) | \($r.stats.requests.failed) |\n" +
            "| Assertions | \($r.stats.assertions.total) | \($r.stats.assertions.failed) |\n"
          ' postman/newman.json >> $GITHUB_STEP_SUMMARY

      - name: Publicar resultados como Check (JUnit)
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Newman Tests
          path: postman/newman-junit.xml
          reporter: java-junit
          fail-on-error: false

      - name: Preparar sitio (Pages)
        run: |
          mkdir -p site
          cp postman/newman-report.html site/index.html

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: newman
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
